{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "DevConnection": "Server=DESKTOP-OB350C9\\MSSQLSERVER01;Database=StoreDB;Integrated Security=true;TrustServerCertificate=True"
  }
}

//¿QUÉ ES UN ORM?
Desarrollo de ambiente web – Semana 4
MBA, Luis Chang - lchangu@esan.edu.pe 5
Object Relational Mapping
MBA, Luis Chang - lchangu@esan.edu.pe 6
• Es un mecanismo que permite abordar,
acceder y manipular objetos (Mapeo) sin
tener que considerar cómo los objetos se
relacionan con sus fuentes de datos.
• Permite crear una base de datos orientada
a objetos “virtual” (Persistencia), sobre
una base de datos relacional.
• Se considera una capa intermedia entre la
base de datos y los objetos de la base de
datos.
• ¿Por qué trabajar con un ORM?:
Abstracción de la base de datos, POO,
seguridad. 

Principios SOLID
MBA, Luis Chang - lchangu@esan.edu.pe 11
• S: Single responsibility principle o Principio de
responsabilidad única. Keyword: “Decoupled”
• O: Open/closed principle o Principio de abierto/cerrado.
Keyword: “Abstraction”
• L: Liskov substitution principle o Principio de sustitución de
Liskov. Keyword: “Replaceable”
• I: Interface segregation principle o Principio de segregación
de la interfaz. Keyword: “Segregate Interfaces”.
• D: Dependency inversion principle o Principio de inversión de
dependencia. Keyword: “Dependency”.

Patrones de diseño
• Los patrones de diseño
son soluciones habituales
a problemas que ocurren
con frecuencia en el
diseño de software. Son
como planos
prefabricados que se
pueden personalizar para
resolver un problema de
diseño recurrente en tu
código.
MBA, Luis Chang - lchangu@esan.edu.pe 13
¿En qué consiste el patrón?
•El propósito del patrón explica
brevemente el problema y la solución.
•La motivación explica en más detalle el
problema y la solución que brinda el
patrón.
•La estructura de las clases muestra cada
una de las partes del patrón y el modo en
que se relacionan.
•El ejemplo de código en uno de los
lenguajes de programación populares
facilita la asimilación de la idea que se
esconde tras el patrón.


API
• Application Programming Interface
– Es un conjunto de productos y servicios
tecnológicos que permiten comunicarse a
través de internet.
– Es un conjunto de reglas, protocolos y
herramientas para construir aplicaciones de
software.
– Permite integrar diferentes aplicaciones web,
móviles, automatizar procesos de negocios,
extraer datos de diferentes sistemas o
construir integraciones entre diferentes
aplicaciones sin importar el lenguaje de
programación utilizado.


REST
• Representational State Transfer
– Es un estilo arquitectónico utilizado en el
desarrollo de aplicaciones web que se
comunican a través de internet.
– Se basa en el protocolo HTTP y utiliza
verbos como: GET, POST, PUT y DELETE.
– Los recursos se identifican mediante una
URL y se pueden acceder a través de HTTP.
– Las respuestas suelen ser en formato JSON
o XML.
– Promueve la interoperabilidad y
escalabilidad de las aplicaciones web sin
conocer detalles internos de cada uno


REST API
• Se refiere a una API que se adhiere a las restricciones y
principios del diseño arquitectónico REST.
• Utiliza los verbos HTTP (GET, POST, PUT, DELETE) para
realizar operaciones en los recursos identificados por
URLs y devuelve las respuestas en formato JSON o
XML.


HTTP Headers
• Son campos adicionales que
se envían junto con una
solicitud o respuesta HTTP.
• Se dividen en dos categorías
principales:
– Request headers
– Response headers
